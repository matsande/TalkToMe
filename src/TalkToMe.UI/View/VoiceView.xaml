<UserControl
  x:Class="TalkToMe.UI.View.VoiceView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:local="clr-namespace:TalkToMe.UI.View"
  xmlns:vm="clr-namespace:TalkToMe.UI.ViewModel"
  xmlns:coreVoice="clr-namespace:TalkToMe.Core.Voice;assembly=TalkToMe.Core"
  mc:Ignorable="d"
  d:DesignHeight="300"
  d:DesignWidth="300"
  d:DataContext="{x:Type vm:VoiceViewModel}">
  <UserControl.Resources>
    <ResourceDictionary>

      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary
          Source="..\Style\Common.xaml" />
        <ResourceDictionary
          Source="..\Style\Button.xaml" />
      </ResourceDictionary.MergedDictionaries>

      <DataTemplate
        DataType="{x:Type coreVoice:VoiceDescriptor}">
        <TextBlock
          Margin="10,0"
          Foreground="{StaticResource WeakForeground}"
          Text="{Binding VoiceName}" />
      </DataTemplate>

      <Style
        x:Key="VoiceSelectionButton"
        TargetType="{x:Type Button}"
        BasedOn="{StaticResource {x:Type Button}}">
        <Setter
          Property="Margin"
          Value="5" />
        <Setter
          Property="FontSize"
          Value="16" />
        <Setter
          Property="FontWeight"
          Value="Bold" />
        <Setter
          Property="Foreground"
          Value="{StaticResource PrimaryForeground}" />
      </Style>

      <SolidColorBrush
        x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
        Color="Lime" />
      <SolidColorBrush
        x:Key="{x:Static SystemColors.HighlightBrushKey}"
        Color="LimeGreen" />

    </ResourceDictionary>
  </UserControl.Resources>
  <DockPanel
    Background="{StaticResource PrimaryBackground}">
    <StackPanel
      DockPanel.Dock="Top">

      <StackPanel
        Margin="0,5"
        Orientation="Vertical">
        <TextBlock
          Style="{StaticResource HeaderTextBlock}"
          Text="Current Voice" />
        <ContentControl
          Content="{Binding CurrentVoice}" />
      </StackPanel>

      <StackPanel
        Margin="0,5"
        Orientation="Vertical">
        <TextBlock
          Style="{StaticResource HeaderTextBlock}"
          Text="Primary Voice" />
        <ContentControl
          Content="{Binding PrimaryVoice}" />
      </StackPanel>

      <StackPanel
        Margin="0,5"
        Orientation="Vertical">
        <TextBlock
          Style="{StaticResource HeaderTextBlock}"
          Text="Secondary Voice" />
        <ContentControl
          Content="{Binding SecondaryVoice}" />
      </StackPanel>
    </StackPanel>
    <Grid
      DockPanel.Dock="Bottom">
      <Grid.ColumnDefinitions>
        <ColumnDefinition
          Width="*" />
        <ColumnDefinition
          Width="*" />
      </Grid.ColumnDefinitions>
      <Button
        Grid.Column="0"
        DockPanel.Dock="Left"
        Style="{StaticResource VoiceSelectionButton}"
        Content="Set Primary"
        Command="{Binding SetPrimaryVoice}" />
      <Button
        Grid.Column="1"
        DockPanel.Dock="Left"
        Style="{StaticResource VoiceSelectionButton}"
        Content="Set Secondary"
        Command="{Binding SetSecondaryVoice}" />
    </Grid>
    <ListView
      BorderBrush="Black"
      Background="{StaticResource DarkBackground}"
      DockPanel.Dock="Top"
      ItemsSource="{Binding AvailableVoices}"
      SelectedItem="{Binding SelectedVoice}">
      <ListView.ItemContainerStyle>
        <Style
          TargetType="{x:Type ListViewItem}">
          <Setter
            Property="Template">
            <Setter.Value>
              <ControlTemplate
                TargetType="{x:Type ListViewItem}">
                <Border
                  CornerRadius="2"
                  SnapsToDevicePixels="True"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  Background="{TemplateBinding Background}">
                  <Border
                    Name="InnerBorder"
                    CornerRadius="1"
                    BorderThickness="1">
                    <ContentPresenter />
                  </Border>
                </Border>
                <ControlTemplate.Triggers>
                  <Trigger
                    Property="IsMouseOver"
                    Value="True">
                    <Setter
                      Property="Background"
                      Value="{StaticResource PositiveAccent}" />
                    <Setter
                      Property="BorderBrush"
                      Value="#FFCCF0FF" />
                  </Trigger>
                  <Trigger
                    Property="IsSelected"
                    Value="True">
                    <!--<Setter
                      Property="Background"
                      Value="{StaticResource ListItemSelectedFill}" />-->
                    <Setter
                      Property="BorderBrush"
                      Value="#FF98DDFB" />
                    <Setter
                      TargetName="InnerBorder"
                      Property="BorderBrush"
                      Value="#80FFFFFF" />
                  </Trigger>
                  <MultiTrigger>
                    <MultiTrigger.Conditions>
                      <Condition
                        Property="IsSelected"
                        Value="True" />
                      <Condition
                        Property="Selector.IsSelectionActive"
                        Value="False" />
                    </MultiTrigger.Conditions>
                    <!--<Setter
                      Property="Background"
                      Value="{StaticResource ListItemSelectedInactiveFill}" />-->
                    <Setter
                      Property="BorderBrush"
                      Value="#FFCFCFCF" />
                  </MultiTrigger>
                  <MultiTrigger>
                    <MultiTrigger.Conditions>
                      <Condition
                        Property="IsSelected"
                        Value="True" />
                      <Condition
                        Property="IsMouseOver"
                        Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter
                      Property="Background"
                      Value="{StaticResource PositiveAccent}" />
                    <Setter
                      Property="BorderBrush"
                      Value="#FF98DDFB" />
                  </MultiTrigger>
                  <Trigger
                    Property="IsEnabled"
                    Value="False">
                    <Setter
                      Property="Foreground"
                      Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </ListView.ItemContainerStyle>
    </ListView>
  </DockPanel>
</UserControl>